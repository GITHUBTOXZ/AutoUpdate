<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Shop.Application.Task</name>
    </assembly>
    <members>
        <member name="T:Shop.Application.Task.Base.TaskBase">
            <summary>
            任务基类
            </summary>
        </member>
        <member name="M:Shop.Application.Task.Base.TaskBase.BaseCatchExecption(System.Action)">
            <summary>
            基类捕捉异常并记录
            </summary>
            <param name="runAction"></param>
        </member>
        <member name="P:Shop.Application.Task.Base.TaskBase.ShopId">
            <summary>
            获取当前定时器的店铺Id
            </summary>
        </member>
        <member name="T:Shop.Application.Task.DoctorExecuteProductTask">
            <summary>
            医生执行理疗产品
            </summary>
        </member>
        <member name="T:Shop.Application.Task.DoctorReturnProductTask">
            <summary>
            医生退款产品
            </summary>
        </member>
        <member name="T:Shop.Application.Task.DoctorSaleProductTask">
            <summary>
            医生销售产品
            </summary>
        </member>
        <member name="T:Shop.Application.Task.LazyCall_JinJiTask">
            <summary>
            延迟调用定时器 add by 雷 2018-5-31
            </summary>
        </member>
        <member name="M:Shop.Application.Task.LazyCall_JinJiTask.Run(System.Object)">
            <summary>
            运行账号信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="M:Shop.Application.Task.LazyCall_JinJiTask.Running">
            <summary>
            实际运行函数
            1.该函数会获取未执行的延迟执行日志，通过反射去执行
            2.每条调用，会开启一条线程异步执行
            3.每次调用，出现不可捕捉异常时会重复调用3次（不可捕捉异常及非业务异常）
            </summary>
        </member>
        <member name="M:Shop.Application.Task.LazyCall_JinJiTask.GetSerivce(System.String)">
            <summary>
            获取服务对象
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="T:Shop.Application.Task.LazyCall_ZhongDengTask">
            <summary>
            延迟调用定时器-中等 add by 雷 2018-5-31
            </summary>
        </member>
        <member name="M:Shop.Application.Task.LazyCall_ZhongDengTask.Run(System.Object)">
            <summary>
            运行账号信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="M:Shop.Application.Task.LazyCall_ZhongDengTask.Running">
            <summary>
            实际运行函数
            1.该函数会获取未执行的延迟执行日志，通过反射去执行
            2.每条调用，会开启一条线程异步执行
            3.每次调用，出现不可捕捉异常时会重复调用3次（不可捕捉异常及非业务异常）
            </summary>
        </member>
        <member name="M:Shop.Application.Task.LazyCall_ZhongDengTask.GetSerivce(System.String)">
            <summary>
            获取服务对象
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="T:Shop.Application.Task.LazyCall_PuTongTask">
            <summary>
            延迟调用定时器-普通 add by 雷 2018-5-31
            </summary>
        </member>
        <member name="M:Shop.Application.Task.LazyCall_PuTongTask.Run(System.Object)">
            <summary>
            运行账号信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="M:Shop.Application.Task.LazyCall_PuTongTask.Running">
            <summary>
            实际运行函数
            1.该函数会获取未执行的延迟执行日志，通过反射去执行
            2.每条调用，会开启一条线程异步执行
            3.每次调用，出现不可捕捉异常时会重复调用3次（不可捕捉异常及非业务异常）
            </summary>
        </member>
        <member name="M:Shop.Application.Task.LazyCall_PuTongTask.GetSerivce(System.String)">
            <summary>
            获取服务对象
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="T:Shop.Application.Task.LazyCall_FeiChangJinJiTask">
            <summary>
            延迟调用定时器 add by 雷 2018-5-31
            </summary>
        </member>
        <member name="M:Shop.Application.Task.LazyCall_FeiChangJinJiTask.Run(System.Object)">
            <summary>
            运行账号信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="M:Shop.Application.Task.LazyCall_FeiChangJinJiTask.Running">
            <summary>
            实际运行函数
            1.该函数会获取未执行的延迟执行日志，通过反射去执行
            2.每条调用，会开启一条线程异步执行
            3.每次调用，出现不可捕捉异常时会重复调用3次（不可捕捉异常及非业务异常）
            </summary>
        </member>
        <member name="M:Shop.Application.Task.LazyCall_FeiChangJinJiTask.GetSerivce(System.String)">
            <summary>
            获取服务对象
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="T:Shop.Application.Task.AccountSyncTask">
            <summary>
            账号信息的同步定时任务
            </summary>
        </member>
        <member name="M:Shop.Application.Task.AccountSyncTask.Run(System.Object)">
            <summary>
            运行账号信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.CancelOrderSyncTask">
            <summary>
            定时取消订单任务
            </summary>
        </member>
        <member name="M:Shop.Application.Task.CancelOrderSyncTask.Run(System.Object)">
            <summary>
            运行取消订单信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.CategorySyncTask">
            <summary>
            同步类目定时任务
            </summary>
        </member>
        <member name="M:Shop.Application.Task.CategorySyncTask.Run(System.Object)">
            <summary>
            运行类目信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.Sync.DepartmentSyncTask">
            <summary>
            部门信息的同步定时任务
            </summary>
        </member>
        <member name="M:Shop.Application.Task.Sync.DepartmentSyncTask.Run(System.Object)">
            <summary>
            运行部门信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.DoctorSchedulingSyncTask">
            <summary>
            医生排班的同步定时任务
            </summary>
        </member>
        <member name="M:Shop.Application.Task.DoctorSchedulingSyncTask.Run(System.Object)">
            <summary>
            运行账号信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.DoctorSyncTask">
            <summary>
            医生信息的同步定时任务
            </summary>
        </member>
        <member name="M:Shop.Application.Task.DoctorSyncTask.Run(System.Object)">
            <summary>
            运行医生信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.DrugMakerSyncTask">
            <summary>
            同步生产企业的定时任务
            </summary>
        </member>
        <member name="M:Shop.Application.Task.DrugMakerSyncTask.Run(System.Object)">
            <summary>
            运行生产企业信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="M:Shop.Application.Task.MonthReportTask.Run(System.Object)">
            <summary>
            运行定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.OrderTimerRebateTask">
            <summary>
            订单定时返利
            </summary>
        </member>
        <member name="T:Shop.Application.Task.PositionSyncTask">
            <summary>
            职位信息同步定时任务
            </summary>
        </member>
        <member name="M:Shop.Application.Task.PositionSyncTask.Run(System.Object)">
            <summary>
            运行账号信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="M:Shop.Application.Task.ProductCacheSyncTask.Run(System.Object)">
            <summary>
            定时访问更新缓存
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.ProductSyncTask">
            <summary>
            产品的同步定时任务
            </summary>
        </member>
        <member name="M:Shop.Application.Task.ProductSyncTask.Run(System.Object)">
            <summary>
            运行产品的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.RegisterSyncTask">
            <summary>
            挂号单信息的同步定时任务
            </summary>
        </member>
        <member name="M:Shop.Application.Task.RegisterSyncTask.Run(System.Object)">
            <summary>
            运行账号信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.RoleSyncTask">
            <summary>
            同步定时角色任务
            </summary>
        </member>
        <member name="M:Shop.Application.Task.RoleSyncTask.Run(System.Object)">
            <summary>
            运行账号信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.ShopSyncTask">
            <summary>
            同步门店信息的定时任务
            </summary>
        </member>
        <member name="M:Shop.Application.Task.ShopSyncTask.Run(System.Object)">
            <summary>
            运行门店信息时的定时任务
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.PrescriptionLoaclToPublicSyncTask">
            <summary>
            店面就诊单同步到公网定时任务
            </summary>
        </member>
        <member name="M:Shop.Application.Task.PrescriptionLoaclToPublicSyncTask.Run(System.Object)">
            <summary>
            运行店面就诊单同步信息
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.RebateOrderSyncTask">
            <summary>
            找回返利
            </summary>
        </member>
        <member name="M:Shop.Application.Task.RebateOrderSyncTask.Run(System.Object)">
            <summary>
            运行店面挂号单同步信息
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.RegisterLoaclToPublicSyncTask">
            <summary>
            店面挂号单同步到公网定时任务 
            </summary>
        </member>
        <member name="M:Shop.Application.Task.RegisterLoaclToPublicSyncTask.Run(System.Object)">
            <summary>
            运行店面挂号单同步信息
            </summary>
            <param name="TaskException"></param>
        </member>
        <member name="T:Shop.Application.Task.Utils.ObjectExtension">
            <summary>
            object拓展函数 add by 雷 2018-5-31
            </summary>
        </member>
        <member name="M:Shop.Application.Task.Utils.ObjectExtension.ToJsonString(System.Object)">
            <summary>
            将对象序列化成JSON字符串
            </summary>
            <param name="obj"></param>
            <returns>序列化后的字符串</returns>
        </member>
        <member name="M:Shop.Application.Task.Utils.ObjectExtension.ToObjectFromString(System.String,System.Type)">
            <summary>
            将字符串转换成指定的类型 add by 雷 2018-5-31
            </summary>
            <param name="str">字符串</param>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Shop.Application.Task.Utils.ObjectExtension.ToObjectFromString``1(System.String)">
            <summary>
            将字符串转换成指定的类型 add by 雷 2018-5-31
            </summary>
            <typeparam name="T">要转换的类型</typeparam>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="P:VersionModel.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:VersionModel.DownLoadFileName">
            <summary>
            下载文件名
            </summary>
        </member>
        <member name="P:VersionModel.DownLoadPath">
            <summary>
            下载地址
            </summary>
        </member>
        <member name="P:VersionModel.ExcuteFileName">
            <summary>
            执行文件名
            </summary>
        </member>
        <member name="P:VersionModel.AddTime">
            <summary>
            添加时间
            </summary>
        </member>
    </members>
</doc>
